services:
  auth-service:
    build: ./packages/auth
    environment:
      - POSTGRES_HOST=postgres-db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - JWT_SECRET=${JWT_SECRET}
      - API_JWT_SECRET=${API_JWT_SECRET}
    ports:
      - ${AUTH_SERVICE_PORT}:80
    depends_on:
      postgres-db:
        condition: service_healthy

  shortener-service:
    build: ./packages/shortener
    environment:
      - POSTGRES_HOST=postgres-db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - JWT_SECRET=${JWT_SECRET}
      - API_JWT_SECRET=${API_JWT_SECRET}
    volumes:
      - ./packages/shortener:/app
    ports:
      - ${SHORTENER_SERVICE_PORT}:80
    depends_on:
      postgres-db:
        condition: service_healthy

  postgres-db:
    image: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ./.volumes/postgres-data:/var/lib/postgresql/data
      - ./packages/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-db:
    image: mongo:latest
    restart: always
    ports:
      - ${MONGO_PORT}:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - ./.volumes/mongo-data:/data/db
      - ./db/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
